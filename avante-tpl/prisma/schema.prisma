// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id             Int            @id @default(autoincrement())
  name           String
  isAdmin        Boolean
  password       String
  availabilities Availability[]
  assignments    Assignment[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model Availability {
  id        Int      @id @default(autoincrement())
  period    DateTime
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Assignment {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  equipment   Equipment @relation(fields: [equipmentId], references: [id])
  equipmentId Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Equipment {
  id          Int           @id @default(autoincrement())
  name        String
  type        EquipmentType
  assignments Assignment[]
}

enum EquipmentType {
  cart
  display
}
